
# --------------------------
# This code is autogenerated
data = 0
while data not in [1, 2]:
    data = int(input('Which data set do you want to use? 1 = Test, 2 = Input '))
if data == 1:
    fn = 'test'+str(5)+'.txt'
elif data == 2:
    fn = 'input'+str(5)+'.txt'
f = open(fn, 'r')
raw = [j for j in f.read().splitlines()]
# --------------------------

#%% Reshaping list

# locate the divider character
div = raw.index('')

rules = []
for j in raw[:div]:
    rules.append(tuple([int(i) for i in j.split('|')]))
    
orders = []
for j in raw[div+1:]:
    orders.append(tuple([int(i) for i in j.split(',')]))
    
#%% Part 1

def chkOrder(rules, order):
    valid = True
    ruleNum = 0
    while valid and ruleNum < len(rules):
        valid = chkRule(rules[ruleNum], order)
        ruleNum += 1
    return valid
        
def chkRule(rule, order):
    # If both pages of the rule are not in the order, it cannot fail
    if not (rule[0] in order and rule[1] in order):
        return True
    if order.index(rule[0]) < order.index(rule[1]):
        return True
    return False

total = 0
for j in orders:
    if chkOrder(rules, j):
        total += j[len(j)//2]
        # print(j[len(j)//2])
        
print('Part 1: The result is: ' + str(total))

#%% Part 2

total = 0
for j in orders:
    if not chkOrder(rules, j):
        
        # total += j[len(j)//2]
        # print(j[len(j)//2])